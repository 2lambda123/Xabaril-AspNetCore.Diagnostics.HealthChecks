name: HealthChecks Milvus CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - src/HealthChecks.Milvus/**
      - test/HealthChecks.Milvus.Tests/**
      - test/_SHARED/**
      - .github/workflows/healthchecks_milvus_ci.yml
      - Directory.Build.props
      - Directory.Build.targets
    tags-ignore:
      - release-*
      - preview-*

  pull_request:
    branches: [ master ]
    paths:
      - src/HealthChecks.Milvus/**
      - test/HealthChecks.Milvus.Tests/**
      - test/_SHARED/**
      - .github/workflows/healthchecks_milvus_ci.yml
      - Directory.Build.props
      - Directory.Build.targets

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      etcd:
        container_name: milvus-etcd
        image: quay.io/coreos/etcd:v3.5.5
        environment:
          - ETCD_AUTO_COMPACTION_MODE=revision
          - ETCD_AUTO_COMPACTION_RETENTION=1000
          - ETCD_QUOTA_BACKEND_BYTES=4294967296
          - ETCD_SNAPSHOT_COUNT=50000
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
        command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
        healthcheck:
          test: ["CMD", "etcdctl", "endpoint", "health"]
          interval: 30s
          timeout: 20s
          retries: 3

      minio:
        container_name: milvus-minio
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        environment:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        ports:
          - "9001:9001"
          - "9000:9000"
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
        command: minio server /minio_data --console-address ":9001"
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3

      standalone:
        container_name: milvus-standalone
        image: milvusdb/milvus:v2.4.6
        command: ["milvus", "run", "standalone"]
        security_opt:
        - seccomp:unconfined
        environment:
          ETCD_ENDPOINTS: etcd:2379
          MINIO_ADDRESS: minio:9000
        volumes:
          - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
          interval: 30s
          start_period: 90s
          timeout: 20s
          retries: 3
        ports:
          - "19530:19530"
          - "9091:9091"
        depends_on:
          - "etcd"
          - "minio"

    networks:
      default:
        name: milvus
  
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
      - name: Restore
        run: |
          dotnet restore ./src/HealthChecks.Milvus/HealthChecks.Milvus.csproj &&          
          dotnet restore ./test/HealthChecks.Milvus.Tests/HealthChecks.Milvus.Tests.csproj
      - name: Check formatting
        run: |
          dotnet format --no-restore --verify-no-changes --severity warn ./src/HealthChecks.Milvus/HealthChecks.Milvus.csproj || (echo "Run 'dotnet format' to fix issues" && exit 1) &&
          dotnet format --no-restore --verify-no-changes --severity warn ./test/HealthChecks.Milvus.Tests/HealthChecks.Milvus.Tests.csproj || (echo "Run 'dotnet format' to fix issues" && exit 1)
      - name: Build
        run: |
          dotnet build --no-restore ./src/HealthChecks.Milvus/HealthChecks.Milvus.csproj &&
          dotnet build --no-restore ./test/HealthChecks.Milvus.Tests/HealthChecks.Milvus.Tests.csproj
      - name: Test
        run: >
          dotnet test
          ./test/HealthChecks.Milvus.Tests/HealthChecks.Milvus.Tests.csproj
          --no-restore
          --no-build
          --collect "XPlat Code Coverage"
          --results-directory .coverage
          --
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          flags: Milvus
          directory: .coverage
